"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWordPressProps = exports.DEFAULT_ISR_REVALIDATE = void 0;
const seedQuery_js_1 = require("./queries/seedQuery.js");
const getTemplate_js_1 = require("./getTemplate.js");
const client_js_1 = require("./client.js");
const index_js_1 = require("./config/index.js");
const index_js_2 = require("./wpHooks/index.js");
const log_js_1 = require("./utils/log.js");
exports.DEFAULT_ISR_REVALIDATE = 60 * 15; // 15 minutes
function isSSR(ctx) {
    return ctx.req !== undefined;
}
async function getWordPressProps(options) {
    var _a, _b, _c;
    const { templates } = (0, index_js_1.getConfig)();
    if (!templates) {
        throw new Error('Templates are required. Please add them to your config.');
    }
    const { ctx, props, revalidate } = options;
    const client = (0, client_js_1.getApolloClient)();
    let resolvedUrl = null;
    if (!isSSR(ctx)) {
        const wordPressNodeParams = (_a = ctx.params) === null || _a === void 0 ? void 0 : _a.wordpressNode;
        if (wordPressNodeParams && Array.isArray(wordPressNodeParams)) {
            resolvedUrl = `/${wordPressNodeParams.join('/')}`;
        }
        else {
            resolvedUrl = '/';
        }
    }
    else {
        resolvedUrl = ctx.req.url;
        ctx.res.setHeader('x-using', 'faust');
    }
    resolvedUrl = index_js_2.hooks.applyFilters('resolvedUrl', resolvedUrl, {
        nextContext: ctx,
    });
    if (!resolvedUrl) {
        return {
            notFound: true,
        };
    }
    const seedQuery = index_js_2.hooks.applyFilters('seedQueryDocumentNode', seedQuery_js_1.SEED_QUERY, {
        resolvedUrl,
    });
    const seedQueryRes = await client.query({
        query: seedQuery,
        variables: { uri: resolvedUrl },
    });
    const seedNode = (_b = seedQueryRes === null || seedQueryRes === void 0 ? void 0 : seedQueryRes.data) === null || _b === void 0 ? void 0 : _b.node;
    (0, log_js_1.debugLog)(`Seed Node for resolved url: "${resolvedUrl}": `, seedNode);
    if (!seedNode) {
        return {
            notFound: true,
        };
    }
    (0, log_js_1.infoLog)(`Possible templates for resolved url: "${resolvedUrl}":`, (0, getTemplate_js_1.getPossibleTemplates)(seedNode));
    const template = (0, getTemplate_js_1.getTemplate)(seedNode, templates);
    if (!template) {
        return {
            notFound: true,
        };
    }
    let templateQueryRes;
    const templateVariables = (template === null || template === void 0 ? void 0 : template.variables)
        ? template === null || template === void 0 ? void 0 : template.variables(seedNode, { asPreview: false, locale: ctx.locale })
        : undefined;
    if (template.query) {
        templateQueryRes = await client.query({
            query: template.query,
            variables: templateVariables,
        });
    }
    const appProps = (0, client_js_1.addApolloState)(client, {
        props: Object.assign({ 
            /**
             * The following props may be null coalesced as an "undefined"
             * value is not able to be serialized
             */
            __SEED_NODE__: seedNode !== null && seedNode !== void 0 ? seedNode : null, __TEMPLATE_QUERY_DATA__: (_c = templateQueryRes === null || templateQueryRes === void 0 ? void 0 : templateQueryRes.data) !== null && _c !== void 0 ? _c : null, __TEMPLATE_VARIABLES__: templateVariables !== null && templateVariables !== void 0 ? templateVariables : null }, props),
    });
    if (!isSSR(ctx)) {
        appProps.revalidate = revalidate !== null && revalidate !== void 0 ? revalidate : exports.DEFAULT_ISR_REVALIDATE;
    }
    return appProps;
}
exports.getWordPressProps = getWordPressProps;
